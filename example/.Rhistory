plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
boxplot(bsample)
points(beta,pch = 3,col = "red")
?errorbar
??errorbar
quantile(bsample)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = 3,col = "red")
bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = 3,col = "red")
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "o", col = "blue")
bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "o", col = "blue")
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "o", col = "blue")
segments(x0 = seq(1:p),
y0 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y1 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))))
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "o", col = "blue")
segments(x0 = seq(1:p),
y0 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y1 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))))
points(bmean,pch = "x", col = "blue")
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y0 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y1 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))))
seq(1:p)
qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost)))
segments(x0 = seq(1:p),
y0 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y1 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost)))
)
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 1
)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 1
)
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 1,col = "red"
)
bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 1,col = "red"
)
plot(beta)
#points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
#points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 1,col = "red"
)
qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost)))
qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost)))
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 3,col = "red"
)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
#points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
#points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = x0,
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 3,col = "red"
)
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 3,col = "red"
)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 3,col = "red"
)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 3,col = "red"
)
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
library(MASS)
library(MCMCpack)
library(rstan)
n = 100
p = 200
X = matrix(rnorm(n*p),ncol = p)
Z = rbinom(p,size = 1, prob = 20/p)
beta = 5*Z*rbeta(p,shape1=4,shape2 = 4)
Y = X%*%beta + rnorm(n)
lambda = 20/p
# Ridge
datalist = list(X = X, Y = c(Y), n = n, p=p,lambda = lambda)
#post = stan("~/Dropbox/Taff/Teaching/CEPE/example/Ridge.stan",
#            data =datalist,
#            chains = 1,warmup = 1000,iter = 2000
#            )
#bsample = extract(post)$beta
SigPost = solve(t(X)%*%X + diag(p)/lambda)
bmean = SigPost %*% t(X)%*%Y
plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
library(MASS)
library(MCMCpack)
library(rstan)
n = 100
p = 120
X = matrix(rnorm(n*p),ncol = p)
Z = rbinom(p,size = 1, prob = 20/p)
beta = 5*Z*rbeta(p,shape1=4,shape2 = 4)
Y = X%*%beta + rnorm(n)
lambda = 20/p
# Ridge
datalist = list(X = X, Y = c(Y), n = n, p=p,lambda = lambda)
#post = stan("~/Dropbox/Taff/Teaching/CEPE/example/Ridge.stan",
#            data =datalist,
#            chains = 1,warmup = 1000,iter = 2000
#            )
#bsample = extract(post)$beta
SigPost = solve(t(X)%*%X + diag(p)/lambda)
bmean = SigPost %*% t(X)%*%Y
plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
library(MASS)
library(MCMCpack)
library(rstan)
n = 100
p = 120
X = matrix(rnorm(n*p),ncol = p)
Z = rbinom(p,size = 1, prob = 20/p)
beta = 5*Z*rbeta(p,shape1=4,shape2 = 4)
Y = X%*%beta + rnorm(n)
lambda = 1/p
# Ridge
datalist = list(X = X, Y = c(Y), n = n, p=p,lambda = lambda)
#post = stan("~/Dropbox/Taff/Teaching/CEPE/example/Ridge.stan",
#            data =datalist,
#            chains = 1,warmup = 1000,iter = 2000
#            )
#bsample = extract(post)$beta
SigPost = solve(t(X)%*%X + diag(p)/lambda)
bmean = SigPost %*% t(X)%*%Y
plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
library(MASS)
library(MCMCpack)
library(rstan)
n = 100
p = 120
X = matrix(rnorm(n*p),ncol = p)
Z = rbinom(p,size = 1, prob = 20/p)
beta = 5*Z*rbeta(p,shape1=4,shape2 = 4)
Y = X%*%beta + rnorm(n)
lambda = 1
# Ridge
datalist = list(X = X, Y = c(Y), n = n, p=p,lambda = lambda)
#post = stan("~/Dropbox/Taff/Teaching/CEPE/example/Ridge.stan",
#            data =datalist,
#            chains = 1,warmup = 1000,iter = 2000
#            )
#bsample = extract(post)$beta
SigPost = solve(t(X)%*%X + diag(p)/lambda)
bmean = SigPost %*% t(X)%*%Y
plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
library(MASS)
library(MCMCpack)
library(rstan)
n = 100
p = 120
X = matrix(rnorm(n*p),ncol = p)
Z = rbinom(p,size = 1, prob = 20/p)
beta = 5*Z*rbeta(p,shape1=4,shape2 = 4)
Y = X%*%beta + rnorm(n)
lambda = 3
# Ridge
datalist = list(X = X, Y = c(Y), n = n, p=p,lambda = lambda)
#post = stan("~/Dropbox/Taff/Teaching/CEPE/example/Ridge.stan",
#            data =datalist,
#            chains = 1,warmup = 1000,iter = 2000
#            )
#bsample = extract(post)$beta
SigPost = solve(t(X)%*%X + diag(p)/lambda)
bmean = SigPost %*% t(X)%*%Y
plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
library(MASS)
library(MCMCpack)
library(rstan)
n = 100
p = 120
X = matrix(rnorm(n*p),ncol = p)
Z = rbinom(p,size = 1, prob = 20/p)
beta = 5*Z*rbeta(p,shape1=4,shape2 = 4)
Y = X%*%beta + rnorm(n)
lambda = 100
# Ridge
datalist = list(X = X, Y = c(Y), n = n, p=p,lambda = lambda)
#post = stan("~/Dropbox/Taff/Teaching/CEPE/example/Ridge.stan",
#            data =datalist,
#            chains = 1,warmup = 1000,iter = 2000
#            )
#bsample = extract(post)$beta
SigPost = solve(t(X)%*%X + diag(p)/lambda)
bmean = SigPost %*% t(X)%*%Y
plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
library(MASS)
library(MCMCpack)
library(rstan)
n = 100
p = 120
X = matrix(rnorm(n*p),ncol = p)
Z = rbinom(p,size = 1, prob = 20/p)
beta = 5*Z*rbeta(p,shape1=4,shape2 = 4)
Y = X%*%beta + rnorm(n)
lambda = 0.01
# Ridge
datalist = list(X = X, Y = c(Y), n = n, p=p,lambda = lambda)
#post = stan("~/Dropbox/Taff/Teaching/CEPE/example/Ridge.stan",
#            data =datalist,
#            chains = 1,warmup = 1000,iter = 2000
#            )
#bsample = extract(post)$beta
SigPost = solve(t(X)%*%X + diag(p)/lambda)
bmean = SigPost %*% t(X)%*%Y
plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
library(MASS)
library(MCMCpack)
library(rstan)
n = 100
p = 120
X = matrix(rnorm(n*p),ncol = p)
Z = rbinom(p,size = 1, prob = 20/p)
beta = 5*Z*rbeta(p,shape1=4,shape2 = 4)
Y = X%*%beta + rnorm(n)
lambda = 0.1
# Ridge
datalist = list(X = X, Y = c(Y), n = n, p=p,lambda = lambda)
#post = stan("~/Dropbox/Taff/Teaching/CEPE/example/Ridge.stan",
#            data =datalist,
#            chains = 1,warmup = 1000,iter = 2000
#            )
#bsample = extract(post)$beta
SigPost = solve(t(X)%*%X + diag(p)/lambda)
bmean = SigPost %*% t(X)%*%Y
plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
lambda = 0.3
# Ridge
datalist = list(X = X, Y = c(Y), n = n, p=p,lambda = lambda)
#post = stan("~/Dropbox/Taff/Teaching/CEPE/example/Ridge.stan",
#            data =datalist,
#            chains = 1,warmup = 1000,iter = 2000
#            )
#bsample = extract(post)$beta
SigPost = solve(t(X)%*%X + diag(p)/lambda)
bmean = SigPost %*% t(X)%*%Y
plot(beta)
points(bmean,pch = 2 , col = "red")
library(mvtnorm)
#bsample = mvrnorm(n = 2000,mu = bmean,Sigma = SigPost)
plot(beta)
points(qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))), pch = "-",col = "red")
points(bmean,pch = "x", col = "blue")
segments(x0 = seq(1:p),
y1 = qnorm(0.975,mean = bmean,sd = sqrt(diag(SigPost))),
x1 = seq(1:p),
y0 = qnorm(0.025,mean = bmean,sd = sqrt(diag(SigPost))),
lty = 2,col = "red"
)
setwd("~/Dropbox/Taff/Teaching/CEPE/example/")
data = faithful
setwd("~/Dropbox/Taff/Teaching/CEPE/example/")
data = faithful
write.csv(file = "faithful.csv")
write.csv(file = "faithful.csv",x = data)
data
X = faithful$eruptions
write.csv(file = "faithful.csv",x = X)
rm(list = ls())
library(pscl)
install.packages("pscl")
library(pscl)
y = prussian$y
str(prussian)
hist(y)
alpha = 2
beta = 3
post = function(x) dgamma(x,alpha + sum(y),n+beta)
curve(post,xlim = c(0,100))
n = length(y)
curve(post,xlim = c(0,100))
curve(post,xlim = c(0,1))
curve(post,xlim = c(0,2))
alpha = 2
beta = 12
post = function(x) dgamma(x,alpha + sum(y),n+beta)
curve(post,xlim = c(0,2))
n = length(y)
alpha = 12
beta = 12
post = function(x) dgamma(x,alpha + sum(y),n+beta)
curve(post,xlim = c(0,2))
n = length(y)
alpha = 100
beta = 100
post = function(x) dgamma(x,alpha + sum(y),n+beta)
curve(post,xlim = c(0,2))
curve(post,xlim = c(0,1.25))
alpha = 20
beta = 1
post = function(x) dgamma(x,alpha + sum(y),n+beta)
curve(post,xlim = c(0,1.25))
y = prussian$y[1:20]
n = length(y)
alpha = 20
beta = 1
post = function(x) dgamma(x,alpha + sum(y),n+beta)
curve(post,xlim = c(0,1.25))
curve(post,xlim = c(0,2))
alpha = 1
beta = 1
post = function(x) dgamma(x,alpha + sum(y),n+beta)
curve(post,xlim = c(0,2))
library(pscl)
y = prussian$y
n = length(y)
alpha = 1
beta = 1
post = function(x) dgamma(x,alpha + sum(y),n+beta)
curve(post,xlim = c(0,2))
curve(post,xlim = c(0,1))
y = prussian$y[1:20]
mean(y)
library(pscl)
y = prussian$y[1:20]
n = length(y)
alpha = 1
beta = 1
post = function(x) dgamma(x,alpha + sum(y),n+beta)
curve(post,xlim = c(0,2))
